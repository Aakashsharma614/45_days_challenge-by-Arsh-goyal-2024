/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    void reorderList(ListNode* head) {
         if(!head||!head->next)
            return;
        ListNode*slow=head;
        ListNode*fast=head;
        while(fast!=nullptr&&fast->next!=nullptr)
        {
            slow=slow->next;
            fast=fast->next->next;
        }
        ListNode* prev = nullptr;
    ListNode* curr = slow->next;
    while (curr) {
        ListNode* next = curr->next;
        curr->next = prev;
        prev = curr;
        curr = next;
    }
    slow->next = nullptr;
        ListNode*firsthead=head;
        ListNode*secondhead=prev;
        while(secondhead!=nullptr)
        {
            ListNode*temp1=firsthead->next;
            ListNode*temp2=secondhead->next;
            firsthead->next=secondhead;
            secondhead->next=temp1;
            firsthead=temp1;
            secondhead=temp2;

        }
         
    }
};
