/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int leftleafsum=0;

     // Initialize leftleafsum in the constructor

    void helper(TreeNode* root) {
        if (root == NULL) return;
        if (isleafnode(root->left)) leftleafsum += root->left->val;
        helper(root->left);
        helper(root->right);
    }

    bool isleafnode(TreeNode* root) {
        if (root == NULL) return false;
        if (root->left == NULL && root->right == NULL) return true;
        return false;
    }

    int sumOfLeftLeaves(TreeNode* root) {
        leftleafsum = 0; // Reset the sum before calculation
        helper(root);
        return leftleafsum;
    }
};
