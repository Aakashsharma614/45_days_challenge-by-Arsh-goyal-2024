/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
int height(TreeNode*root){
    if(root==NULL){
        return 0;
    }
    int leftheight=height(root->left);
    int righheight=height(root->right);
    int finalans=max(leftheight,righheight)+1;
    return finalans;
}
    bool isBalanced(TreeNode* root) {
      if(root==NULL){
          return true;
      } 
      int leftheight=height(root->left);
      int rightheight=height(root->right);
      int diff=abs(leftheight-rightheight);
      int cuurnode=(diff<=1);
      int leftans=isBalanced(root->left);
      int rightans=isBalanced(root->right);
      if(cuurnode&&leftans&&rightans){
          return true;
      }
      else{
          return false;
      }

    }
};
